{"version":3,"file":"static/js/264.5864c01c.chunk.js","mappings":"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","sources":["../node_modules/nanoid/index.browser.js","webpack://react-homework-template/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.js","webpack://react-homework-template/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.js","webpack://react-homework-template/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.js","Pages/Phonebook.js"],"sourcesContent":["import { urlAlphabet } from './url-alphabet/index.js'\nlet random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nlet customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nlet customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nlet nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\nexport { nanoid, customAlphabet, customRandom, urlAlphabet, random }\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ContactForm_form__dhl+T\",\"label\":\"ContactForm_label__-cVXI\",\"input\":\"ContactForm_input__Bl93P\",\"btn\":\"ContactForm_btn__wll+u\"};","import { useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux/es/exports\";\nimport { add } from '../../redux/actions';\nimport { nanoid } from 'nanoid';\nimport s from './ContactForm.module.css';\n\nfunction ContactForm() {\n\n    const [ name, setName ] = useState('');\n    const [number, setNumber] = useState('');\n    \n    const users = useSelector(state => state.items);\n    const dispatch = useDispatch();\n    \n    const handleInputChange = e => {\n        switch (e.currentTarget.name) {\n            case \"name\": return setName(e.currentTarget.value);\n            case \"number\": return setNumber(e.currentTarget.value);\n            default: return \"\";\n        }\n    }\n\n    const handleSubmit = event => {\n        event.preventDefault();\n        const newUser = { id: nanoid(5), name, number };\n        const newUserNormalized = name.toLowerCase();\n        const matchedName = users.find(user => user.name.toLowerCase() === newUserNormalized);\n        matchedName ? alert(`${name} is already in contacts.`) : dispatch(add(newUser));\n        formReset();\n    }\n\n    const formReset = () => {\n        setName(\"\");\n        setNumber(\"\");\n        return\n    }\n    \n    return (\n        <form onSubmit={handleSubmit} className={s.form}>\n                    \n            <label className={s.label}>\n                Name\n                <input\n                    type=\"text\"\n                    name=\"name\"\n                    pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                    title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n                    required\n                    value={name}\n                    onChange={handleInputChange}\n                    className={s.input}\n                />\n            </label>\n\n            <label className={s.label}>\n                Number\n                <input\n                    type=\"tel\"\n                    name=\"number\"\n                    pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                    title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n                    required\n                    value={number}\n                    onChange={handleInputChange}\n                    className={s.input}\n                />\n            </label>\n\n            <button className={s.btn}>Add contact</button>\n                    \n        </form>   \n    );   \n};\n\nexport default ContactForm;","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"ContactList_list__csErn\",\"item\":\"ContactList_item__EZYHO\",\"text\":\"ContactList_text__+NWAW\",\"btn\":\"ContactList_btn__6Piat\"};","import s from './ContactList.module.css';\nimport { useSelector, useDispatch } from \"react-redux/es/exports\";\nimport { remove } from '../../redux/actions';\n\nfunction ContactList() {\n    \n    const users = useSelector(state => state.items);\n    const filteredValue = useSelector(state => state.filter);\n    const dispatch = useDispatch();\n\n    const handleDeleteUser = event => {\n        const deleteUserId = event.currentTarget.value;\n        dispatch(remove(deleteUserId));\n    }\n\n    const normalizedFilter = filteredValue.toLowerCase();\n    const visibleContacts = users.filter(user => user.name.toLowerCase().includes(normalizedFilter));\n    \n    return (\n        <ul className={s.list}>\n            {visibleContacts.map((user) => (\n                <li key={user.id} className={s.item}>\n                    <span className={s.text}>{user.name} : {user.number}</span>\n                    <button type=\"button\" value={user.id} onClick={handleDeleteUser} className={s.btn}>Delete</button>\n                </li>\n            ))}\n        </ul>\n    )\n}\n\nexport default ContactList;","// extracted by mini-css-extract-plugin\nexport default {\"label\":\"Filter_label__vEd1E\",\"input\":\"Filter_input__N7T3z\"};","import { useSelector } from \"react-redux/es/exports\";\nimport { useDispatch } from \"react-redux/es/exports\";\nimport { filter } from '../../redux/actions';\nimport s from \"./Filter.module.css\";\n\nfunction Filter() {\n\n    const filteredValue = useSelector(state => state.filter);\n    const dispatch = useDispatch();\n\n    const handlerFilter = event => {\n    const filtered = event.currentTarget.value;\n    dispatch(filter(filtered));\n  }\n    \n    return (\n        <label className={s.label}>\n            Find contacts by name\n            <input value={filteredValue} onChange={handlerFilter} className={s.input}></input>\n        </label>\n    )\n}\n\nexport default Filter;","import ContactForm from \"../components/ContactForm\";\nimport ContactList from \"../components/ContactList\";\nimport Filter from \"../components/Filter/Filter\";\n\nfunction Phonebook() {\n\n  return ( \n    <div\n      style={{\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        color: '#010101'\n      }}\n    >\n      \n      <h1>Phonebook</h1>\n      <ContactForm />\n      <h2>Contacts</h2>\n      <Filter />\n      <ContactList />\n    </div>\n  ); \n};\n\nexport default Phonebook;"],"names":["nanoid","size","crypto","getRandomValues","Uint8Array","reduce","id","byte","toString","toUpperCase","useState","name","setName","number","setNumber","users","useSelector","state","items","dispatch","useDispatch","handleInputChange","e","currentTarget","value","formReset","onSubmit","event","preventDefault","newUser","newUserNormalized","toLowerCase","find","user","alert","add","className","s","type","pattern","title","required","onChange","filteredValue","filter","handleDeleteUser","deleteUserId","remove","normalizedFilter","visibleContacts","includes","map","onClick","filtered","style","display","flexDirection","alignItems","color"],"sourceRoot":""}